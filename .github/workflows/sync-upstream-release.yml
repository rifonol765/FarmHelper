      # 5. Get info about the LATEST release from UPSTREAM
      - name: Get Latest Upstream Release Info
        id: upstream_release
        env:
          GH_TOKEN: ${{ github.token }}
          UPSTREAM_REPO: JellyLabScripts/FarmHelper
        run: |
          echo "Fetching latest release tag info from $UPSTREAM_REPO..."
          # Capture potential errors from gh release list
          if ! latest_release_tag_json=$(gh release list --repo $UPSTREAM_REPO --limit 1 --json tagName); then
            echo "::error::Failed to run 'gh release list'."
            exit 1
          fi

          echo "Raw gh release list output: $latest_release_tag_json" # Add this for debugging

          if [[ -z "$latest_release_tag_json" || "$latest_release_tag_json" == "[]" ]]; then
            echo "No releases found on upstream repository $UPSTREAM_REPO."
            echo "No new release found. Exiting cleanly."
            # Set an empty tag output so subsequent steps know? Or just exit 0?
            # Exiting 0 is cleaner as the 'skip' check handles it.
            exit 0
          fi

          # Attempt to extract tag_name, capture jq exit code
          tag_name=$(echo "$latest_release_tag_json" | jq -r '.[0].tagName')
          jq_exit_code=$?

          # Check BOTH jq exit code AND if the result is empty/null
          if [[ $jq_exit_code -ne 0 || -z "$tag_name" || "$tag_name" == "null" ]]; then
            echo "::error::Could not extract valid tag name from gh output. jq exit code: $jq_exit_code, extracted value: '$tag_name'"
            exit 1
          fi

          # --- If we got here, tag_name is valid ---
          echo "Latest upstream tag found: $tag_name"
          # Set the output IMMEDIATELY after confirming it's valid
          echo "tag_name=$tag_name" >> $GITHUB_OUTPUT
          echo "Output 'tag_name' set to '$tag_name'" # Add confirmation

          echo "Fetching details for tag $tag_name..."
          # Use gh release view to get details including the body
          if ! release_details_json=$(gh release view "$tag_name" --repo $UPSTREAM_REPO --json isPrerelease,name,body); then
             echo "::error::Could not fetch details for release tag '$tag_name' using 'gh release view'."
             exit 1
          fi

          # Extract details (only if gh release view succeeded)
          is_prerelease=$(echo "$release_details_json" | jq -r '.isPrerelease')
          release_name=$(echo "$release_details_json" | jq -r '.name')
          release_body=$(echo "$release_details_json" | jq -r '.body')

          # Set remaining outputs
          echo "is_prerelease=$is_prerelease" >> $GITHUB_OUTPUT
          echo "release_name=$release_name" >> $GITHUB_OUTPUT
          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          echo "$release_body" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          echo "Successfully retrieved and processed upstream release details."
